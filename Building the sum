#include <bits/stdc++.h>
using namespace std;

const int mod = 1e9 + 7;

int BuildingtheSum(vector <int>& nums, int target) {
    int n = nums.size();
    vector <vector <int>> dp(n + 1, vector<int> (2001, 0));
    dp[0][1000] = 1;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= 2000; j++) {
            if (dp[i][j] == 0)
                continue;
            dp[i + 1][j + nums[i]] = (dp[i + 1][j + nums[i]] + dp[i][j]) % mod;
            dp[i + 1][j - nums[i]] = (dp[i + 1][j - nums[i]] + dp[i][j]) % mod;
        }
    }
    return dp[n][target + 1000];
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    int target;
    cin >> target;
    vector <int> nums(n);
    for (auto &i : nums)
        cin >> i;
    cout << BuildingtheSum(nums, target);
}

class Solution {
public:    
  vector<vector<int>> ans;
  vector<int> cur;
    void find(vector<int>& nums, vector<bool>& used) {
        if (cur.size() == nums.size()) {
            ans.push_back(cur);
            return;
        }
        for (int i = 0; i < nums.size(); i++) {
            if (used[i]) continue;
            if (i > 0 && nums[i] == nums[i - 1] && !used[i - 1])
                continue;
            used[i] = true;
            cur.push_back(nums[i]);
            find(nums, used);
            cur.pop_back();
            used[i] = false;
        }
    }

public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<bool> used(nums.size(), false);
        find(nums, used);
        return ans;
    }
};

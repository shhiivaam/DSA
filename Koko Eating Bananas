class Solution {
public:
bool check(vector<int>& piles,int mid, int h){
    long long cur_h=0;
    for(int i =0;i<piles.size();i++){
        if(piles[i] % mid == 0){
        cur_h += piles[i] / mid;
        }else{
            cur_h +=piles[i] / mid+1;
        } 
    }
    return cur_h <= h;
}
    int minEatingSpeed(vector<int>& piles, int h) {
        int lo =1;
        int hi = *max_element(piles.begin(),piles.end());
        int ans = -1;
        while(lo <= hi){
            const int mid = lo+(hi-lo)/2;
            if(check(piles,mid,h)){
                ans = mid;
                hi = mid-1; 
            }else{
                lo = mid+1;
            }
        }
    return ans;
    }
};

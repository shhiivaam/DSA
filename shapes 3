#include <bits/stdc++.h>
using namespace std;
// O(N^2) time complexity
// O(1) space
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    int jump = n - 1;
    int times = 1;

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < jump; j++)
        {
            cout << " ";
        }
        for (int j = 0; j < times; j++)
        {
            cout << "*";
        }
        cout << "\n";
        jump -= 1;
        times += 2;
    }
    // Do the same as shape 1 for upper half and invert the solution for it for the lower half
    times -= 2;
    jump += 1;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < jump; j++)
        {
            cout << " ";
        }
        for (int j = 0; j < times; j++)
        {
            cout << "*";
        }
        cout << "\n";
        jump += 1;
        times -= 2;
    }
    return 0;
}

class Solution {
public:
int solve(int i, int j, string&s, string&t,vector<vector<int>>&dp){
    if(i < 0 || j < 0) return 0;
    
    if(dp[i][j] != -1 ) return dp[i][j];

    if(s[i] == t[j]){
        return  dp[i][j] = 1 + solve(i - 1, j - 1, s , t,dp);
    }

   return dp[i][j] = max(solve(i - 1, j , s, t,dp) , solve(i, j - 1, s , t,dp));
}
    int longestCommonSubsequence(string text1, string text2) {
        int n = text1.length();
        int k =  text2.length();
        vector<vector<int>>dp(n,vector<int>(k,-1));
        return solve(n-1,k-1,text1,text2,dp);
    }
};

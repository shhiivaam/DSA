class Solution {
public:
    int numSubmat(vector<vector<int>>& mat) {
        int m = mat.size(), n = mat[0].size();
        vector<vector<int>> height(m, vector<int>(n, 0));

        for (int j = 0; j < n; j++) {
            for (int i = 0; i < m; i++) {
                if (mat[i][j] == 0) height[i][j] = 0;
                else height[i][j] = (i == 0 ? 1 : height[i-1][j] + 1);
            }
        }

        int res = 0;
        for (int i = 0; i < m; i++) {
            stack<int> st;
            vector<int> sum(n, 0);
            for (int j = 0; j < n; j++) {
                while (!st.empty() && height[i][st.top()] >= height[i][j]) {
                    st.pop();
                }
                if (!st.empty()) {
                    int prev = st.top();
                    sum[j] = sum[prev] + height[i][j] * (j - prev);
                } else {
                    sum[j] = height[i][j] * (j + 1);
                }
                res += sum[j];
                st.push(j);
            }
        }

        return res;
    }
};

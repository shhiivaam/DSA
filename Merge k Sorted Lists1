class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& list) {
      priority_queue<pair<int, ListNode*>,
                   vector<pair<int, ListNode*>>,
                   greater<pair<int, ListNode*>>> pq;
      for(int i=0;i<list.size();i++){
         if(list[i]){
            pq.push({list[i]->val,list[i]});
         }
      }
    ListNode* dummy = new ListNode(-1);
    ListNode* temp = dummy;
    while(!pq.empty()){
        auto it = pq.top();
        pq.pop();
        if(it.second->next)
         pq.push({it.second->next->val,it.second->next});
        temp->next= it.second;
        temp=temp->next;
    }
 return dummy->next;
    }
};

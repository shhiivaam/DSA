#include <bits/stdc++.h>
using namespace std;

vector<int> findPeaks(const vector<int>& target) {
    vector<int> result;
    int n = target.size();
    
    // Add the first element by default
    result.push_back(target[0]);
    
    // Process middle elements
    for (int i = 1; i < n - 1; i++) {
        if (target[i] > target[i - 1] && target[i] > target[i + 1]) {
            result.push_back(target[i]);
        }
    }
    
    // Add the last element by default
    result.push_back(target[n - 1]);
    
    return result;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        
        vector<int> target(n);
        for (int i = 0; i < n; i++) {
            cin >> target[i];
        }
        
        vector<int> result = findPeaks(target);
        for (int x : result) {
            cout << x << " ";
        }
        cout << "\n";
    }
    return 0;
}

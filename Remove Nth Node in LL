#include <bits/stdc++.h>

using namespace std;

struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};



ListNode* removeNthFromEnd(ListNode* head, int N) {
    int ind =0;
    ListNode * cnt = head;
    while(cnt != nullptr){
        ind++;
        cnt = cnt->next;
    }  
    int  del = (ind  -  N ) + 1 ;
     if(del == 1){
        head = head ->next;
        return head;
     }
     int i = 1;
     cnt = head->next;
     ListNode* prev = head;
     while(i < del-1){
        cnt = cnt->next;
        prev= prev->next;
        i++;
     }
     prev->next = cnt->next;
    return head;
}
ListNode* GetList(vector<int> &num) {
    ListNode* head = nullptr;

    if(num.empty()) {
        return head;
    }

    ListNode* cur = head;
    
    for(int i  = 0; i < (int)num.size(); i++) {
        ListNode* temp = new ListNode(num[i]);
        if(!cur) {
            cur = temp;
            head = cur;
        }
        else {
            cur->next = temp;
            cur = temp;
        }
    }
    
    return head;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    int n;
    cin >> n;

    vector<int> num;
    for(int i = 0; i < n; i++) {
        int x;
        cin >> x;
        num.push_back(x);
    }

    int N;
    cin >> N;

    ListNode* head = GetList(num);

    head = removeNthFromEnd(head, N);

    while(head) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << "\n";
    
    return 0;
}
